return {
	'folke/snacks.nvim',
	priority = 1000,
	lazy = false,
	opts = {
		animate = { enabled = true },
		bigfile = { enabled = true },
		bufdelete = { enabled = true },
		debug = { enabled = true },
		dim = { enabled = true },
		explorer = { enabled = true },
		git = { enabled = true },
		gitbrowse = { enabled = true },
		input = { enabled = true },
		layout = { enabled = true },
		picker = {
			enabled = true,
			sources = {
				explorer = {
					hidden = true,
					layout = {
						layout = {
							position = 'right',
						},
					},
				},
			},
			layouts = {
				fullscreen = {
					layout = {
						backdrop = false,
						box = 'horizontal',
						{
							box = 'vertical',
							width = 0.4,
							border = 'right',
							{
								win = 'input',
								height = 1,
								border = 'top',
								title = '{title}',
								title_pos = 'left',
							},
							{ win = 'list', border = 'top' },
						},
						{ win = 'preview' },
					},
				},
			},
			layout = 'fullscreen',
		},
		quickfile = { enabled = true },
		rename = { enabled = true },
		scratch = { enabled = true },
		scroll = { enabled = true },
		statuscolumn = { enabled = true },
		terminal = { enabled = true },
		util = { enabled = true },
		win = { enabled = true },
		words = { enabled = true },
		zen = { enabled = true },
	},
	keys = {
		{ '<leader><space>', function() Snacks.picker.smart() end },
		{ '<leader>,',       function() Snacks.picker.buffers() end },
		{ '<leader>/',       function() Snacks.picker.grep() end },
		{ '<leader>:',       function() Snacks.picker.command_history() end },
		{ '<leader>`',       function() Snacks.terminal() end },
		{ '<leader>e',       function() Snacks.picker.explorer() end },
		{ '<leader>ff',      function() Snacks.picker.files() end },
		{ '<leader>fr',      function() Snacks.picker.recent() end },
		{ '<leader>fc',      function() Snacks.picker.files({ cwd = vim.fn.stdpath('config') }) end },
		{ '<leader>fg',      function() Snacks.picker.git_files() end },
		{ '<leader>fp',      function() Snacks.picker.projects() end },
		{ '<leader>sl',      function() Snacks.picker.lines() end },
		{ '<leader>sb',      function() Snacks.picker.grep_buffers() end },
		{ '<leader>sw',      function() Snacks.picker.grep_word() end },
		{ 'gd',              function() Snacks.picker.lsp_definitions() end },
		{ 'gD',              function() Snacks.picker.lsp_declarations() end },
		{ 'gr',              function() Snacks.picker.lsp_references() end },
		{ 'gi',              function() Snacks.picker.lsp_implementations() end },
		{ 'gy',              function() Snacks.picker.lsp_type_definitions() end },
		{ '<leader>ss',      function() Snacks.picker.lsp_symbols() end },
		{ '<leader>sS',      function() Snacks.picker.lsp_workspace_symbols() end },
		{ '<leader>z',       function() Snacks.zen() end },
		{ '<leader>Z',       function() Snacks.zen.zoom() end },
		{ '<leader>.',       function() Snacks.scratch() end },
		{ '<leader>S',       function() Snacks.scratch.select() end },
		{ '<leader>bd',      function() Snacks.bufdelete() end },
		{ '<leader>cR',      function() Snacks.rename.rename_file() end },
	},
}
