return {
	'folke/snacks.nvim',
	priority = 1000,
	lazy = false,
	opts = {
		animate = { enabled = true },
		bigfile = { enabled = true },
		explorer = { enabled = true },
		git = { enabled = true },
		layout = { enabled = true },
		picker = {
			enabled = true,
			sources = { explorer = { hidden = true, layout = { layout = { position = 'right' } } } },
			layouts = {
				default = {
					layout = {
						box = 'horizontal',
						{
							box = 'vertical',
							width = 0.4,
							border = 'solid',
							title = '{title} {live} {flags}',
							{ win = 'input', height = 1 },
							{ win = 'list' },
						},
						{ win = 'preview', title = '{preview}', border = 'solid' },
					},
				},
			},
		},
		rename = { enabled = true },
		scroll = { enabled = true },
		terminal = { enabled = true },
	},
	keys = {
		{ '<leader>e', function() Snacks.picker.explorer() end },
		{ '<leader>`', function() Snacks.terminal() end },
		{ '<leader>ff', function() Snacks.picker.files() end },
		{ '<leader>fr', function() Snacks.picker.recent() end },
		{ '<leader>fc', function() Snacks.picker.files({ cwd = vim.fn.stdpath('config') }) end },
		{ '<leader>st', function() Snacks.picker.grep() end },
		{ '<leader>sw', function() Snacks.picker.grep_word() end },
		{ '<leader>ss', function() Snacks.picker.lsp_symbols() end },
		{ '<leader>sS', function() Snacks.picker.lsp_workspace_symbols() end },
		{ 'gd', function() Snacks.picker.lsp_definitions() end },
		{ 'gD', function() Snacks.picker.lsp_declarations() end },
		{ 'gy', function() Snacks.picker.lsp_type_definitions() end },
		{ 'gr', function() Snacks.picker.lsp_references() end },
		{ 'gi', function() Snacks.picker.lsp_implementations() end },
		{ '<leader>rN', function() Snacks.rename.rename_file() end },
	},
}
